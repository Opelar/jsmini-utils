{"version":3,"file":"utils.js","sources":["../src/utils/urlArgs.js","../src/utils/getCookies.js","../src/utils/isArray.js","../src/utils/upsetArray.js","../src/utils/isNumber.js","../src/utils/trimString.js","../src/utils/formateDate.js","../src/utils/classof.js","../src/index.js"],"sourcesContent":["/**\r\n * reg 获取 param\r\n * @param {String} name\r\n */\r\nexport function getUrlParam(name) {\r\n  let reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n  let r = window.location.search.substr(1).match(reg);\r\n\r\n  if (r != null) {\r\n    return decodeURI(r[2]);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * split() 获取 paramName\r\n * @param {String} paramName\r\n */\r\nexport function getURLParameters(paramName) {\r\n  let sURL = window.document.URL.toString();\r\n\r\n  if (sURL.indexOf(\"?\") > 0) {\r\n    let arrParams = sURL.split(\"?\");\r\n\r\n    let arrURLParams = arrParams[1].split(\"&\");\r\n\r\n    let arrParamNames = new Array(arrURLParams.length);\r\n    let arrParamValues = new Array(arrURLParams.length);\r\n\r\n    let i = 0;\r\n    for (i = 0; i < arrURLParams.length; i++) {\r\n      let sParam = arrURLParams[i].split(\"=\");\r\n      arrParamNames[i] = sParam[0];\r\n      if (sParam[1] != \"\") arrParamValues[i] = unescape(sParam[1]);\r\n      else arrParamValues[i] = \"No Value\";\r\n    }\r\n\r\n    for (i = 0; i < arrURLParams.length; i++) {\r\n      if (arrParamNames[i] == paramName) {\r\n        return arrParamValues[i];\r\n      }\r\n    }\r\n    return \"No Parameters Found\";\r\n  }\r\n}\r\n\r\n/*\r\n * get url params\r\n * let args = urlArgs(); \r\n * let q = args.q || \"\"; \r\n * let n = args.n ? parseInt(args.n) : 10;\r\n */\r\nexport function urlArgs() {\r\n  let args = {};\r\n  let query = location.search.substring(1);\r\n  let pairs = query.split(\"&\");\r\n  for (let i = 0; i < pairs.length; i++) {\r\n    let pos = pairs[i].indexOf(\"=\");\r\n    if (pos == -1) continue; // If not found, skip it\r\n    let name = pairs[i].substring(0, pos); // name\r\n    let value = pairs[i].substring(pos + 1); // value\r\n    value = decodeURIComponent(value); // Decode the value\r\n    args[name] = value;\r\n  }\r\n  return args;\r\n}\r\n","// 返回document的cookie作为 objext name/value\r\n// 假设cookie值是用encodeURIComponent() 进行编码的。\r\nfunction getCookies() {\r\n  let cookies = {};\r\n  let all = document.cookie; // Get all cookies in string\r\n  if (all === \"\") return cookies;\r\n  let list = all.split(\"; \");\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    let cookie = list[i];\r\n    let p = cookie.indexOf(\"=\");\r\n    let name = cookie.substring(0, p);\r\n    let value = cookie.substring(p + 1);\r\n    value = decodeURIComponent(value);\r\n    cookies[name] = value;\r\n  }\r\n\r\n  return cookies;\r\n}\r\n\r\nexport default getCookies;\r\n","/**\r\n * 判断是对象还是数组\r\n * @param {Array || object} arr\r\n */\r\n\r\nexport default function isArray(arrOrObj) {\r\n  if (!arrOrObj || typeof arrOrObj !== \"object\") {\r\n    throw new Error(\"arg is not an object\");\r\n  }\r\n\r\n  // if (Array.isArray(arrOrObj)) {\r\n  //   return true;\r\n  // } else {\r\n  //   return false;\r\n  // }\r\n\r\n  return Object.prototype.toString.call(arrOrObj).slice(8, -1) === \"Array\";\r\n}\r\n","/**\r\n * 数组随机乱序\r\n * @param {Array} arr\r\n */\r\nexport default function upsetArray(arr) {\r\n  return arr.sort(() => Math.random() - 0.5);\r\n}\r\n","/**\r\n * 判断是否是数字 （排除 NaN）\r\n * @param {number} value\r\n */\r\nexport default function isNumber(value) {\r\n  return typeof value === \"number\" && !isNaN(value);\r\n}\r\n","/**\r\n * 去除空格\r\n * @param {String} str\r\n * @param {Number} type 1-所有空格 2-前后空格 3-前空格 4-后空格\r\n */\r\nexport default function trimString(str, type) {\r\n  switch (type) {\r\n    case 1:\r\n      return str.replace(/\\s+/g, \"\");\r\n    case 2:\r\n      return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    case 3:\r\n      return str.replace(/(^\\s*)/g, \"\");\r\n    case 4:\r\n      return str.replace(/(\\s*$)/g, \"\");\r\n    default:\r\n      return str;\r\n  }\r\n}\r\n","/**\r\n * 时间戳转时间输出\r\n * @param {Number} timestamp\r\n */\r\nexport default function formateDate(timestamp) {\r\n  let date = new Date(timestamp);\r\n  // 年 月 日\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n  // 时 分 秒\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n\r\n  let myDate = year + \"-\" + month + \"-\" + day;\r\n  let myTime = hours + \":\" + minutes + \":\" + seconds;\r\n\r\n  return myDate + \" \" + myTime;\r\n}\r\n","/**\r\n * 返回数据的类型\r\n * classof([]) => \"Array\"\r\n */\r\nexport default function classof(o) {\r\n  if (o === null) return \"Null\";\r\n  if (o === undefined) return \"Undefined\";\r\n  return Object.prototype.toString.call(o).slice(8, -1);\r\n}\r\n","import { urlArgs, getUrlParam, getURLParameters } from \"./utils/urlArgs\";\r\nimport getCookies from \"./utils/getCookies\";\r\nimport isArray from \"./utils/isArray\";\r\nimport upsetArray from \"./utils/upsetArray\";\r\nimport isNumber from \"./utils/isNumber\";\r\nimport trimString from \"./utils/trimString\";\r\nimport formateDate from \"./utils/formateDate\";\r\nimport classof from \"./utils/classof\";\r\n\r\nconst utils = {\r\n  urlArgs,\r\n  getUrlParam,\r\n  getURLParameters,\r\n  getCookies,\r\n  isArray,\r\n  upsetArray,\r\n  isNumber,\r\n  trimString,\r\n  formateDate,\r\n  classof\r\n};\r\n\r\nexport default utils;\r\n"],"names":["getUrlParam","name","reg","RegExp","r","window","location","search","substr","match","decodeURI","getURLParameters","paramName","sURL","document","URL","toString","indexOf","arrParams","split","arrURLParams","arrParamNames","Array","length","arrParamValues","i","sParam","unescape","urlArgs","args","query","substring","pairs","pos","value","decodeURIComponent","getCookies","cookies","all","cookie","list","p","isArray","arrOrObj","Error","Object","prototype","call","slice","upsetArray","arr","sort","Math","random","isNumber","isNaN","trimString","str","type","replace","formateDate","timestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","myDate","myTime","classof","o","undefined","utils"],"mappings":"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"}